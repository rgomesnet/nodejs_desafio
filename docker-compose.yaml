version: '3'
services:

  nginx:
    image: nginx:latest
    volumes:
      - ./server_nginx/nginx.conf:/etc/nginx/nginx.conf
    container_name: server_nginx
    tty: true
    ports:
      - "8080:80"
    networks:
      - network_nodejs_challenge
    depends_on:
          app_nodejs:
            condition: service_healthy

  app_nodejs:
    build: 
      context: ./app_nodejs
    container_name: app_nodejs
    volumes:
      - ./app_nodejs:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    networks:
      - network_nodejs_challenge
    depends_on:
      db_mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "ping", "-c", "3", "localhost:3000"]
      interval: 5s
      timeout: 10s
      retries: 5

  db_mysql:
    image: mysql:5.7
    command: --innodb-use-native-aio=0
    container_name: db_mysql
    restart: always
    tty: true
    ports:
      - "3306:3306"
    networks:
      - network_nodejs_challenge
    environment:
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - ./db_mysql/init.sql:/docker-entrypoint-initdb.d/init.sql

    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 20s
      retries: 10

networks:
  network_nodejs_challenge:
    driver: bridge
    name: network_nodejs_challenge